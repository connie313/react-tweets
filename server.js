// Require our dependencies
var express = require('express'),
  exphbs = require('express-handlebars'),
  http = require('http'),
  mongoose = require('mongoose'),
  twitter = require('twitter'),
  routes = require('./routes'),
  tracks = require('./tracks');
  config = require('./config'),
  streamHandler = require('./utils/streamHandler');

// Create an express instance and set a port variable
var app = express();
var port = process.env.PORT || 8080;
// Set handlebars as the templating engine
app.engine('handlebars', exphbs({ defaultLayout: 'main'}));
app.set('view engine', 'handlebars');

// Disable etag headers on responses
app.disable('etag');

// Connect to our mongo database
mongoose.connect('mongodb://localhost/react-tweets-test');

// Create a new ntwitter instance
var twit = new twitter(config.twitter);
// Index Route
app.get('/', routes.index);
app.get('/twit', routes.twit);
app.get('/search/:id', function(req,res){
  var tracklist = req.params.id;
  console.log(tracklist);
  twit.stream('statuses/filter',{ track: tracklist}, function(stream){
    streamHandler(stream,io,tracklist);
  });
  res.redirect('/');
});

// Page Route
app.get('/page/:page/:skip', routes.page);

// Set /public as our static content dir
app.use("/", express.static(__dirname + "/public/"));
app.use('/tracks', tracks);

// Fire this bitch up (start our server)
var server = http.createServer(app).listen(port, function() {
  console.log('Express server listening on port ' + port);
});

// Initialize socket.io
var io = require('socket.io').listen(server);

var plotly = require('plotly')(config.plotly.username, config.plotly.api_key);
// var data = [{"y":,"mode":"lines markers","marker":{"color":"rgba(31, 119, 180, 0.96)"},"x":,"line":{"color":"rgba(31, 119, 180, 0.31)"},"type":"scatter","uid":"a3e911"}];
// var layout = {"title":"streaming mock sensor data","xaxis":{"type":"date","range":[1453385019148,1453385029116],"autorange":true},"yaxis":{"type":"linear","range":[-2.894287814223907,4.081085376804082],"autorange":true},"height":976,"width":1827,"autosize":true};
// var graphOptions = {layout: layout};
// plotly.plot(data, graphOptions, function (err, msg) {
//     console.log(msg);
// }); 


// var data =  [{
//   "name": "1/2 Hz",
//   "x": ["2016-01-21 14:03:39.148","2016-01-21 14:03:39.248","2016-01-21 14:03:39.348","2016-01-21 14:03:39.449","2016-01-21 14:03:39.549","2016-01-21 14:03:39.649","2016-01-21 14:03:39.751","2016-01-21 14:03:39.851","2016-01-21 14:03:39.951","2016-01-21 14:03:40.053","2016-01-21 14:03:40.153","2016-01-21 14:03:40.253","2016-01-21 14:03:40.355","2016-01-21 14:03:40.455","2016-01-21 14:03:40.555","2016-01-21 14:03:40.657","2016-01-21 14:03:40.757","2016-01-21 14:03:40.858","2016-01-21 14:03:40.958","2016-01-21 14:03:41.058","2016-01-21 14:03:41.159","2016-01-21 14:03:41.259","2016-01-21 14:03:41.359","2016-01-21 14:03:41.460","2016-01-21 14:03:41.560","2016-01-21 14:03:41.660","2016-01-21 14:03:41.761","2016-01-21 14:03:41.861","2016-01-21 14:03:41.961","2016-01-21 14:03:42.062","2016-01-21 14:03:42.162","2016-01-21 14:03:42.262","2016-01-21 14:03:42.363","2016-01-21 14:03:42.463","2016-01-21 14:03:42.563","2016-01-21 14:03:42.665","2016-01-21 14:03:42.765","2016-01-21 14:03:42.865","2016-01-21 14:03:42.967","2016-01-21 14:03:43.067","2016-01-21 14:03:43.167","2016-01-21 14:03:43.269","2016-01-21 14:03:43.369","2016-01-21 14:03:43.469","2016-01-21 14:03:43.571","2016-01-21 14:03:43.671","2016-01-21 14:03:43.772","2016-01-21 14:03:43.872","2016-01-21 14:03:43.972","2016-01-21 14:03:44.073","2016-01-21 14:03:44.173","2016-01-21 14:03:44.273","2016-01-21 14:03:44.374","2016-01-21 14:03:44.474","2016-01-21 14:03:44.574","2016-01-21 14:03:44.696","2016-01-21 14:03:44.796","2016-01-21 14:03:44.898","2016-01-21 14:03:44.998","2016-01-21 14:03:45.098","2016-01-21 14:03:45.200","2016-01-21 14:03:45.300","2016-01-21 14:03:45.400","2016-01-21 14:03:45.502","2016-01-21 14:03:45.602","2016-01-21 14:03:45.702","2016-01-21 14:03:45.803","2016-01-21 14:03:45.903","2016-01-21 14:03:46.003","2016-01-21 14:03:46.104","2016-01-21 14:03:46.204","2016-01-21 14:03:46.304","2016-01-21 14:03:46.405","2016-01-21 14:03:46.505","2016-01-21 14:03:46.605","2016-01-21 14:03:46.705","2016-01-21 14:03:46.807","2016-01-21 14:03:46.907","2016-01-21 14:03:47.007","2016-01-21 14:03:47.109","2016-01-21 14:03:47.209","2016-01-21 14:03:47.309","2016-01-21 14:03:47.411","2016-01-21 14:03:47.511","2016-01-21 14:03:47.611","2016-01-21 14:03:47.712","2016-01-21 14:03:47.812","2016-01-21 14:03:47.912","2016-01-21 14:03:48.013","2016-01-21 14:03:48.113","2016-01-21 14:03:48.213","2016-01-21 14:03:48.314","2016-01-21 14:03:48.414","2016-01-21 14:03:48.514","2016-01-21 14:03:48.615","2016-01-21 14:03:48.715","2016-01-21 14:03:48.815","2016-01-21 14:03:48.916","2016-01-21 14:03:49.016","2016-01-21 14:03:49.116"],
//   "line":{"color":"rgba(31, 119, 180, 0.31)"},
//   "y": [-1.9572442004946486,-1.7707673835081057,0.7506248302483108,1.6502246788816217,1.313476107737534,0.2665760025185162,0.6927077918799003,2.2178681451454247,3.3476755206665976,2.4505428421989506,1.9357209426527362,1.825653249340479,2.8984593992890453,3.7323167172526825,2.57868398584403,1.7525656536423881,1.8159017838020985,1.72506863770589,2.309855771955749,1.2850159716950507,0.1905083832743153,0.14952882674610968,-1.2346791556572856,-0.7551849654669424,-1.2933298657621823,-2.152916485222672,-1.1693286535719651,-0.04424395255452995,-0.07440838672823602,0.184684230461731,-0.7898280594072313,0.29540239908429466,0.46813895763062163,0.9172170232657899,0.2949932407230036,-1.1820716393691533,-0.7574223131597391,-0.579739638217471,-0.9038896475467917,-1.1503361022039023,-2.5455191546725073,-2.2782836459004367,0.8679888570939094,1.3521203873927803,0.7832871557297525,0.7817807114413889,0.9373170097290049,1.900369512379871,1.9676693928362932,2.196924503788332,1.2360547115147447,2.406575271287622,2.54902345967405,2.793703972688519,2.178425442578976,1.050238070878582,1.218302410674876,2.2545263667470667,2.0105556666386466,0.48991682708488615,0.3847164644048373,0.1721578483670969,-0.7834562861445256,-0.873857863027391,-0.9573318352220226,-0.9939057765364756,-0.20430226040956498,0.508522649237369,0.6470040915128041,0.4559369757774252,0.7982592640272826,0.730374216688453,1.7775336863649995,1.6092753994403248,0.4801928807336179,-0.9269425554474796,-0.2852336703553421,0.655064644761594,0.2561980854736313,-0.877811920205169,-1.5692919322731442,-1.2112261490634788,-0.37911196985575557,0.09983851046085923,-0.8843551717541938,-0.8899242790788287,0.08899198541572947,1.0894791896987361,1.0499354095612639,0.5633620298248214,0.08040258509042708,1.1562137882433507,1.2377786280868117,1.653954124762555,0.655722850206357,-0.11911594457300828,0.10570339549837487,-0.062006346658882217,-0.29012208884677776,-0.7940636760996627],
//   "mode":"lines markers",
//   "marker":{"color":"rgba(31, 119, 180, 0.96)"},
//   "type": "scatter",
//   "stream": {
//     token: config.plotly.token
//   }
// }, {
//   "name": "1 Hz",
//   "x": ["sin", "cos", "tan"],
//   "y": [12, 18, 29],
//   "type": "bar",
//   "stream": {
//     token: config.plotly.token2
//   }
// }]

// var layout = {"title":"streaming mock sensor data","xaxis":{"type":"date","range":[1453385019148,1453385029116],"autorange":true},"yaxis":{"type":"linear","range":[-2.894287814223907,4.081085376804082],"autorange":true},"height":976,"width":1827,"autosize":true};


// plotly.plot(data, layout, function (err, resp) {
//    if (err) return console.log("ERROR", err);

//    console.log(resp);

//   var plotlystream1 = plotly.stream(config.plotly.token, function () {});
//   var plotlystream2 = plotly.stream(config.plotly.token2, function () {});

//   streamHz(plotlystream1, 0.5);
//   streamHz(plotlystream2, 1);
// })


// function streamHz(stream, hz) {
//   var ts = 0.1;
//   var t = 0;
// }